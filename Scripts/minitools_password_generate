#!/usr/bin/bash
#writen by dberistain

# Function to generate a random password of specified length
generate_password() {
  local length=$1
  local complexity=$2
  local char_set

  if [ "$complexity" == "easy" ]; then
    char_set='A-Za-z0-9'
  elif [ "$complexity" == "normal" ]; then
    char_set='A-Za-z0-9!@#$%^&*()=+_'
  elif [ "$complexity" == "hard" ]; then
    char_set='A-Za-z0-9!@#$%^&*()=+~[]{}|:;<>,.?'
  fi

  password=$(LC_ALL=C tr -dc "$char_set" < /dev/urandom | head -c "$length")
  echo "$password"
}

# Check if command line arguments are provided
if [ "$#" -ge 1 ]; then
  complexity=$1
else
  complexity="normal"
fi

if [ "$#" -ge 2 ]; then
  password_length=$2
else
  password_length=12
fi

# Check if the complexity input is valid
if [ "$complexity" != "easy" ] && [ "$complexity" != "normal" ] && [ "$complexity" != "hard" ]; then
  echo "Invalid complexity level. Please choose easy, normal, or hard."
  exit 1
fi

# Check if the input is a valid number and within the desired range
if ! [[ "$password_length" =~ ^[0-9]+$ ]] || ((password_length < 8)) || ((password_length > 32)); then
  echo "Invalid input for password length. Please enter a number between 8 and 32."
  exit 1
fi

# Generate the password
generated_password=$(generate_password "$password_length" "$complexity")

echo "Generated password: $generated_password"
